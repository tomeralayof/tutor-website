{"ast":null,"code":"var _jsxFileName = \"/home/tomer/Desktop/private-totor/private/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { sectionArr } from \"./sections/sectionArr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = _ref => {\n  let {\n    section\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: section.class,\n    id: `st-panel-${section.id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"st-deco\",\n      \"data-icon\": section.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: section.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: section.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = Section;\nconst App = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(\"st-control-5\");\n  const handleChange = event => {\n    setSelectedOption(event.target.id);\n  };\n  const setOptions = labelArr => {\n    const options = [];\n    for (let i = 1; i <= labelArr.length; ++i) {\n      options.push({\n        id: `st-control-${i}`,\n        for: `st-panel-${i}`,\n        label: labelArr[i - 1]\n      });\n    }\n    return options;\n  };\n  const lables = [\"Serendipity\", \"Happiness\", \"? מי אני\", \"? מי אני\", \"ברוכים הבאים\"];\n  const options = setOptions(lables);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"st-container\",\n        children: [options.map(option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"radio-set\",\n            id: option.id,\n            for: option.for,\n            checked: selectedOption === option.id,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `#${option.for}`,\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"st-scroll\",\n          children: sectionArr.map(section => /*#__PURE__*/_jsxDEV(Section, {\n            section: section\n          }, section.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QzHE51LdkYnzsx6DA2URORljzPk=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","sectionArr","Section","section","class","id","icon","title","text","App","selectedOption","setSelectedOption","handleChange","event","target","setOptions","labelArr","options","i","length","push","for","label","lables","map","option"],"sources":["/home/tomer/Desktop/private-totor/private/my-react-app/src/App.js"],"sourcesContent":["import React , { useState } from 'react';\nimport \"./App.css\"\n\nimport { sectionArr } from \"./sections/sectionArr\"\n\nconst Section = ({ section }) => (\n  <section className={section.class} id={`st-panel-${section.id}`}>\n    <div className=\"st-deco\" data-icon={section.icon}></div>\n    <h2>{section.title}</h2>\n    <p>{section.text}</p>\n  </section>\n);\n\nconst App = () => {\n  const [selectedOption, setSelectedOption] = useState(\"st-control-5\");\n\n  const handleChange = (event) => {\n    setSelectedOption(event.target.id);\n  };\n\n  const setOptions = (labelArr) => {\n    const options = [];\n\n    for(let i = 1; i <= labelArr.length ;++i ) {\n      options.push({id: `st-control-${i}`, for : `st-panel-${i}`, label : labelArr[i - 1] });  \n    }\n\n    return options;\n  }\n\n  const lables = [\"Serendipity\",\"Happiness\", \"? מי אני\", \"? מי אני\", \"ברוכים הבאים\"];\n\n  const options = setOptions(lables);\n\n\n  return (\n    <React.Fragment>\n      <div class=\"container\">\n        <div class=\"st-container\">\n\n        {options.map((option) => (\n        <React.Fragment key={option.id}>\n        <input\n          type=\"radio\"\n          name=\"radio-set\"\n          id = {option.id}\n          for={option.for}\n          checked={ selectedOption === option.id }\n          onChange={ handleChange }\n        />\n        <a href={`#${option.for}`}>{option.label}</a>\n      </React.Fragment>\n    ))}\n\n        <div class=\"st-scroll\">\n          {sectionArr.map(section => (\n            <Section key={section.id} section={section} />\n          ))}\n          \n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AACxC,OAAO,WAAW;AAElB,SAASC,UAAU,QAAQ,uBAAuB;AAAA;AAElD,MAAMC,OAAO,GAAG;EAAA,IAAC;IAAEC;EAAQ,CAAC;EAAA,oBAC1B;IAAS,SAAS,EAAEA,OAAO,CAACC,KAAM;IAAC,EAAE,EAAG,YAAWD,OAAO,CAACE,EAAG,EAAE;IAAA,wBAC9D;MAAK,SAAS,EAAC,SAAS;MAAC,aAAWF,OAAO,CAACG;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eACxD;MAAA,UAAKH,OAAO,CAACI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACxB;MAAA,UAAIJ,OAAO,CAACK;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAAA,CACX;AAAC,KANIN,OAAO;AAQb,MAAMO,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EAEpE,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC9BF,iBAAiB,CAACE,KAAK,CAACC,MAAM,CAACT,EAAE,CAAC;EACpC,CAAC;EAED,MAAMU,UAAU,GAAIC,QAAQ,IAAK;IAC/B,MAAMC,OAAO,GAAG,EAAE;IAElB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,QAAQ,CAACG,MAAM,EAAE,EAAED,CAAC,EAAG;MACzCD,OAAO,CAACG,IAAI,CAAC;QAACf,EAAE,EAAG,cAAaa,CAAE,EAAC;QAAEG,GAAG,EAAI,YAAWH,CAAE,EAAC;QAAEI,KAAK,EAAGN,QAAQ,CAACE,CAAC,GAAG,CAAC;MAAE,CAAC,CAAC;IACxF;IAEA,OAAOD,OAAO;EAChB,CAAC;EAED,MAAMM,MAAM,GAAG,CAAC,aAAa,EAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,CAAC;EAElF,MAAMN,OAAO,GAAGF,UAAU,CAACQ,MAAM,CAAC;EAGlC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACb;MAAK,KAAK,EAAC,WAAW;MAAA,uBACpB;QAAK,KAAK,EAAC,cAAc;QAAA,WAExBN,OAAO,CAACO,GAAG,CAAEC,MAAM,iBACpB,QAAC,KAAK,CAAC,QAAQ;UAAA,wBACf;YACE,IAAI,EAAC,OAAO;YACZ,IAAI,EAAC,WAAW;YAChB,EAAE,EAAIA,MAAM,CAACpB,EAAG;YAChB,GAAG,EAAEoB,MAAM,CAACJ,GAAI;YAChB,OAAO,EAAGX,cAAc,KAAKe,MAAM,CAACpB,EAAI;YACxC,QAAQ,EAAGO;UAAc;YAAA;YAAA;YAAA;UAAA,QACzB,eACF;YAAG,IAAI,EAAG,IAAGa,MAAM,CAACJ,GAAI,EAAE;YAAA,UAAEI,MAAM,CAACH;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,GATxBG,MAAM,CAACpB,EAAE;UAAA;UAAA;UAAA;QAAA,QAWjC,CAAC,eAEE;UAAK,KAAK,EAAC,WAAW;UAAA,UACnBJ,UAAU,CAACuB,GAAG,CAACrB,OAAO,iBACrB,QAAC,OAAO;YAAkB,OAAO,EAAEA;UAAQ,GAA7BA,OAAO,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA,QACzB;QAAC;UAAA;UAAA;UAAA;QAAA,QAEI;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACS;AAErB,CAAC;AAAC,GAnDII,GAAG;AAAA,MAAHA,GAAG;AAqDT,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}