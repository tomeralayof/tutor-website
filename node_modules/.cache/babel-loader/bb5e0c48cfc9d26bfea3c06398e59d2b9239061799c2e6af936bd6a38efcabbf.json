{"ast":null,"code":"var _jsxFileName = \"/home/tomer/Desktop/private-totor/private/my-react-app/src/components/navBar.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavBar = _ref => {\n  let {\n    selectedOption,\n    handleChange\n  } = _ref;\n  const setOptions = () => {\n    const options = [];\n    const labelArr = [\"צור קשר\", \"מאמרים\", \"? מה אני מלמד\", \" אני ואני מאמין\", \"ברוכים הבאים\"];\n    labelArr.map(() => options.push());\n    for (let i = 1; i <= labelArr.length; ++i) {\n      options.push({\n        id: `st-control-${i}`,\n        for: `st-panel-${i}`,\n        label: labelArr[i - 1]\n      });\n    }\n    return options;\n  };\n  const options = setOptions();\n  return options.map(option => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"radio-set\",\n        id: option.id,\n        for: option.for,\n        checked: selectedOption === option.id,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `#${option.for}`,\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, option.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  });\n};\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","NavBar","selectedOption","handleChange","setOptions","options","labelArr","map","push","i","length","id","for","label","option"],"sources":["/home/tomer/Desktop/private-totor/private/my-react-app/src/components/navBar.jsx"],"sourcesContent":["import React from \"react\";\n\nexport const NavBar = ({ selectedOption,handleChange } ) => {\n\n    \n    const setOptions = () => {\n        const options = [];\n\n        const labelArr = [\"צור קשר\",\"מאמרים\", \"? מה אני מלמד\", \" אני ואני מאמין\", \"ברוכים הבאים\"];\n\n        labelArr.map(()=> options.push() );\n        \n        for(let i = 1; i <= labelArr.length ;++i ) {\n            options.push({id: `st-control-${i}`, for : `st-panel-${i}`, label : labelArr[i - 1] });  \n        }\n        \n        return options;\n    }\n    \n\n    const options = setOptions();              \n\n    return (  \n        options.map((option)=> {\n            return (\n            <React.Fragment key={option.id}>\n            <input\n              type=\"radio\"\n              name=\"radio-set\"\n              id = {option.id}\n              for={option.for}\n              checked={ selectedOption === option.id }\n              onChange={ handleChange }\n              />\n            <a href={`#${option.for}`}>{option.label}</a>\n          </React.Fragment>\n        )\n        })\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,MAAM,GAAG,QAAsC;EAAA,IAArC;IAAEC,cAAc;IAACC;EAAa,CAAC;EAGlD,MAAMC,UAAU,GAAG,MAAM;IACrB,MAAMC,OAAO,GAAG,EAAE;IAElB,MAAMC,QAAQ,GAAG,CAAC,SAAS,EAAC,QAAQ,EAAE,eAAe,EAAE,iBAAiB,EAAE,cAAc,CAAC;IAEzFA,QAAQ,CAACC,GAAG,CAAC,MAAKF,OAAO,CAACG,IAAI,EAAE,CAAE;IAElC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,QAAQ,CAACI,MAAM,EAAE,EAAED,CAAC,EAAG;MACvCJ,OAAO,CAACG,IAAI,CAAC;QAACG,EAAE,EAAG,cAAaF,CAAE,EAAC;QAAEG,GAAG,EAAI,YAAWH,CAAE,EAAC;QAAEI,KAAK,EAAGP,QAAQ,CAACG,CAAC,GAAG,CAAC;MAAE,CAAC,CAAC;IAC1F;IAEA,OAAOJ,OAAO;EAClB,CAAC;EAGD,MAAMA,OAAO,GAAGD,UAAU,EAAE;EAE5B,OACIC,OAAO,CAACE,GAAG,CAAEO,MAAM,IAAI;IACnB,oBACA,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACf;QACE,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,WAAW;QAChB,EAAE,EAAIA,MAAM,CAACH,EAAG;QAChB,GAAG,EAAEG,MAAM,CAACF,GAAI;QAChB,OAAO,EAAGV,cAAc,KAAKY,MAAM,CAACH,EAAI;QACxC,QAAQ,EAAGR;MAAc;QAAA;QAAA;QAAA;MAAA,QACvB,eACJ;QAAG,IAAI,EAAG,IAAGW,MAAM,CAACF,GAAI,EAAE;QAAA,UAAEE,MAAM,CAACD;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GATxBC,MAAM,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAUf;EAEnB,CAAC,CAAC;AAEV,CAAC;AAAA,KArCYV,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}